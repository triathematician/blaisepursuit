/**
 * PointPackingGUI.java
 * Created on Dec 7, 2009
 */

package main;

import data.propertysheet.PropertySheet;
import data.propertysheet.editor.EditorRegistration;
import java.awt.geom.Point2D;
import java.beans.DefaultPersistenceDelegate;
import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileFilter;
import org.bm.blaise.specto.plane.PlaneAxes;
import org.bm.blaise.specto.plane.PlaneAxes.AxisStyle;
import org.bm.blaise.specto.visometry.Plottable;

/**
 * <p>
 *    This class is the main GUI for the point distribution investigation applet.
 * </p>
 * @author Elisha Peterson
 */
public class PointDistributionMain extends javax.swing.JFrame {

    DistributionScenarioVis vis;
    DistributionScenarioAlgorithmInterface algorithm;
    
    /** Creates new form PointPackingGUI */
    public PointDistributionMain() {
        try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { }
        initComponents();
        fc = new JFileChooser();
        EditorRegistration.registerEditors();

        algoBox.setModel(new DefaultComboBoxModel(Algorithms.values()));
        algorithm = (DistributionScenarioAlgorithmInterface) algoBox.getSelectedItem();

        scenarioPlot.setDesiredRange(-.5,-.5,2.5,1.5);
        scenarioPlot.addPlottable(PlaneAxes.instance(AxisStyle.BOX, "x", "y"));

        vis = new DistributionScenarioVis();
        scenarioPlot.setDefaultCoordinateHandler(vis);
        scenarioPlot.addPlottable(vis);
        vis.addChangeListener(new ChangeListener(){
            public void stateChanged(ChangeEvent e) {
                jTable1.setModel(vis.getTableModel());
                avgLabel.setText(" Avg Area = " + String.format("%2f", vis.scenario.getAreaAverage()));
                devLabel.setText(" Dev Area = " + String.format("%2f", Math.sqrt(vis.scenario.getAreaVariance())));
                varLabel.setText(" Var Area = " + String.format("%2f", vis.scenario.getAreaVariance()));
            }
        });
        vis.stateChanged(new ChangeEvent(this));

        propPanel.removeAll();
        propPanel.add("Visometry", new PropertySheet(scenarioPlot.getVisometry()));
        for (Plottable p : scenarioPlot.getPlottables())
            propPanel.add(p.toString(), new PropertySheet(p));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        avgLabel = new javax.swing.JLabel();
        devLabel = new javax.swing.JLabel();
        varLabel = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        scenarioPlot = new org.bm.blaise.specto.plane.PlanePlotComponent();
        jScrollPane1 = new javax.swing.JScrollPane();
        propPanel = new gui.RollupPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel2 = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        saveAsButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        algoBox = new javax.swing.JComboBox();
        goButton = new javax.swing.JButton();
        statusBar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(200, 65));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 300));
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        avgLabel.setFont(new java.awt.Font("Tahoma", 3, 14));
        avgLabel.setText(" Avg Area = ");
        jPanel2.add(avgLabel);

        devLabel.setFont(new java.awt.Font("Tahoma", 3, 14));
        devLabel.setText("Dev Area =");
        jPanel2.add(devLabel);

        varLabel.setFont(new java.awt.Font("Tahoma", 3, 14));
        varLabel.setText(" Var Area = ");
        jPanel2.add(varLabel);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOneTouchExpandable(true);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(500, 300));

        org.jdesktop.layout.GroupLayout scenarioPlotLayout = new org.jdesktop.layout.GroupLayout(scenarioPlot);
        scenarioPlot.setLayout(scenarioPlotLayout);
        scenarioPlotLayout.setHorizontalGroup(
            scenarioPlotLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 332, Short.MAX_VALUE)
        );
        scenarioPlotLayout.setVerticalGroup(
            scenarioPlotLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 367, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(scenarioPlot);

        jScrollPane1.setViewportView(propPanel);

        jSplitPane1.setLeftComponent(jScrollPane1);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        jLabel2.setText("File: ");
        jToolBar1.add(jLabel2);

        loadButton.setText("Load");
        loadButton.setFocusable(false);
        loadButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(loadButton);

        saveButton.setText("Save");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton);

        saveAsButton.setText("Save As...");
        saveAsButton.setFocusable(false);
        saveAsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveAsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveAsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveAsButton);
        jToolBar1.add(jSeparator1);

        jLabel1.setText("Algorithm: ");
        jToolBar1.add(jLabel1);

        algoBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        algoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algoBoxActionPerformed(evt);
            }
        });
        jToolBar1.add(algoBox);

        goButton.setText("GO!");
        goButton.setFocusable(false);
        goButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        goButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(goButton);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        statusBar.setText("STATUS: ");
        getContentPane().add(statusBar, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        Point2D.Double[] newPos = algorithm.getNewPositions(vis.getScenario());
        vis.getPoints().setValues(newPos);
        statusBar.setText("STATUS: updated point locations");
}//GEN-LAST:event_goButtonActionPerformed

    //
    // FILE HANDLING
    //

    JFileChooser fc;
    File openFile = null;

    /** @return extension of a file */
    public static String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');
        if (i > 0 &&  i < s.length() - 1) ext = s.substring(i+1).toLowerCase();
        return ext;
    }
    /** A filter that shows only XML file */
    final static FileFilter xmlFilter = new FileFilter(){
        public boolean accept(File pathname) { return pathname != null && (pathname.isDirectory() || "xml".equals(getExtension(pathname))); }
        public String getDescription() { return "XML files"; }
    };

    private void loadAction(File file) {
        statusBar.setText("Opening: " + file.getName() + "...");
        try {
            XMLDecoder decoder = new XMLDecoder(new BufferedInputStream(new FileInputStream(file)));
            vis.setScenario((DistributionScenario) decoder.readObject());
            decoder.close();
            statusBar.setText(statusBar.getText() + "... successful!");
        } catch (FileNotFoundException ex) {
            statusBar.setText(statusBar.getText() + " ERROR -- FILE NOT FOUND!");
        }
    }

    private void saveAction(File file) {
        statusBar.setText("Saving: " + file.getName() + "...");
        try {
            XMLEncoder encoder = new XMLEncoder(new BufferedOutputStream(new FileOutputStream(file)));
            encoder.setPersistenceDelegate(Point2D.Double.class, new DefaultPersistenceDelegate(new String[]{"x","y"}));
            encoder.setPersistenceDelegate(Point2.class, new DefaultPersistenceDelegate(new String[]{"x","y"}));
            encoder.writeObject(vis.getScenario());
            encoder.close();
            statusBar.setText(statusBar.getText() + " successful.");
        } catch (FileNotFoundException ex) {
            statusBar.setText(statusBar.getText() + " ERROR -- FILE NOT FOUND!");
        }
    }

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        fc.setFileFilter(xmlFilter);
        if (openFile != null) {
            fc.setCurrentDirectory(openFile);
            fc.setSelectedFile(openFile);
        }
        if (fc.showOpenDialog(PointDistributionMain.this) == JFileChooser.APPROVE_OPTION) {
            openFile = fc.getSelectedFile();
            loadAction(openFile);
        } else {
            statusBar.setText("Opening file action cancelled by user.");
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (openFile != null) {
            saveAction(openFile);
        } else {
            saveAsButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void algoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algoBoxActionPerformed
        algorithm = (DistributionScenarioAlgorithmInterface) algoBox.getSelectedItem();
        statusBar.setText("STATUS: changed algorithm");
    }//GEN-LAST:event_algoBoxActionPerformed

    private void saveAsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsButtonActionPerformed
        fc.setFileFilter(xmlFilter);
        if (openFile != null) {
            fc.setCurrentDirectory(openFile);
            fc.setSelectedFile(openFile);
        }
        if (fc.showSaveDialog(PointDistributionMain.this) == JFileChooser.APPROVE_OPTION) {
            openFile = fc.getSelectedFile();
            saveAction(openFile);
        } else {
            System.out.println(" save command cancelled by user.");
        }
    }//GEN-LAST:event_saveAsButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointDistributionMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algoBox;
    private javax.swing.JLabel avgLabel;
    private javax.swing.JLabel devLabel;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton loadButton;
    private gui.RollupPanel propPanel;
    private javax.swing.JButton saveAsButton;
    private javax.swing.JButton saveButton;
    private org.bm.blaise.specto.plane.PlanePlotComponent scenarioPlot;
    private javax.swing.JLabel statusBar;
    private javax.swing.JLabel varLabel;
    // End of variables declaration//GEN-END:variables


}
